Interface:have methods and no body/implementation.In interface every method are defined are abstract only.
Interface is same as class
Interface will have methods but not body
//classes should define and implement methods present in interface
interface variables by default are public
*one class can implement multiple interfaces separated by commas
*Interfaces are called by object references
Implements is used for interfaces.

Abstraction:
hiding the implementation details 
if there is any method in java without any body or implementation then those methods we call it as abstract methods
If a class have implemented methods and non - implemented methods then those class are called abstract class.
if any method without any implementation then that is abstract method and in a class if there is abstract method then that class is abstract class.
So with Abstract class only partial abstraction is achieved.
Class which is declared with keyword Abstract is Abstract class- is a combination abstract methods and non abstract methods(methods with the body)
A class have only abstract method then it is interface.
Interface achieve 100% abstraction by hiding implementation details
**private access modifier is not allowed for methods defined in abstract class
**every abstract class has to be inherited
extends is used for inheritance
**private,protected,default can be used in Abstract classes

Inheritance:
Java does not allow/not supported multiple inheritances.By using inheritance we can take properties from parent class to child class by using extend keyword

function overloading:(runtime polymorphism)
if the same class has mulitple methods with the same name but different arguments inside the method is known as function overloading.
1st rule- either argument count should be different
2nd rule-or argument data type should be different

function overriding:
both the method have same name,same signature,(same parameters),same argument list, same argument data type,same return type as well
child class overrides parent class i.e ignoring parent  class and implementing child class

Arrays:
If we have to store multiple values in single container we use arrays.A container which stores multiple values of same data type

Constructor:
it executes a block of code whenever an object is created(constructor is invoked whenever we create an object)
constructor(its like method but) will not return any values
name of constructor should be the class name
whenever you create an object , constructor is called.
compiler will call implicit constructor(default) if you have not defined any constructor block.

parameterized constructor:
if we pass parameters in the constructor then it is called parameterized constructor.
Java first look for explicit constructor if it finds parameters in explicit constructor then it will be called first, else default constructor will be called.

If you define any constructor,java compiler will not look for default constructor

Super keyword:
To differentiate between child variable and parent variable(ex:name-child, super.name-parent)
super keyword refers to parent class i.e from where we inherit the properties to a particular class(ex:child)
first preference is given to local class i.e ex child class
super keyword is used to get methods/variables from parent class to executes it in child class
super keyword should be used as first line in child constructor if we want to use parent constructor
super keyword brings value from parent class.

this Keyword:
this refers to current object and its scope lies in class level
this refers to global variable and not local variable
this brings value from object level i.e class level

static:
creating an instance or creating an object
creating object is memory allocation
when use static keyword for any variable then the variable copy is shared by all objects
when we declare any variable as static then the variable is part of class but not object
all static variables are class variables.
variables which comes in constructor are local variables.
variables which are declared in class are instance variables.
it saves memory,when there is scope for sharing within the same objects
static keywords are independent of objects,static keyword belongs to class.
-->we can call methods in a class by creating objects of that class.

static method:
public void static- add keyword static in method
**static method will only accept static variables
static methods are class methods .These are not rely on any objects so to call these methods,**we can call with class name and not object name
classname.object name- object independent
in static block we write variables which are static

**In static block and static method no need to create any object.
**static block will be called automatically the moment the class is loaded
static method will not be called automatically, we need to call implicitly by using either direct calling or by using class name
** we can call static method from another static method - YES

final:
if we declare any variable as final, we cannot change the value again
constant variables are variables which are final
if class name is final then we cannot extend that class,i.e we cannot inherit parent class
if method is final ,then we cannot override that method


Package:
Package - set of classes and interfaces

java.lang - inbuilt package like psvm,system.out.println,integer,array comes with java compiler

java.util - ArrayList,collection interfaces,HashSet,HashMap
import package.classname

User defined package- test cases
1.class A can use the class B directly by creating object if both class A and class B belongs to same package
java.io - file reading,file writing

funtions and methods are same
modifiers and specifiers are same.

access modifiers:
Default:access method anywhere only in package.
public:variable or method as public, then you will have access across all the packages.
private:You cannot access methods or variables outside the class and package//credit card details for a particular class.
protected:variable/method as protected you can access those in sub classes only(in other packages) through child class(extend keyword).
In same package you can access anywhere like default.

Exception handling:
one try can be followed by multiple catch block
catch should be an immediate block after try.

finally:This block is executed irrespective of exception thrown or not
even test script pass or fail, finally block will execute
closing the browser or delete the cookies in test scripts
if we stop jvm forcibly, then finally will not execute.
finally is for restricting access, we cannot use that, inherit that or change the values.

string n1 = new string("Hello world")

n1 reference object is created in stack memory

and Hello world object is created in Heap memory


	




